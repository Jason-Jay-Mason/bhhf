# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  sys: SystemInfo
  id: ID!
  form: JSON!
  values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
}

type Query {
  getCollection(collection: String): Collection!
  getCollections: [Collection!]!
  node(id: String): Node!
  getDocument(collection: String, relativePath: String): DocumentNode!
  getDocumentList(before: String, after: String, first: Float, last: Float): DocumentConnection!
  getDocumentFields: JSON!
  getMainPageDocument(relativePath: String): MainPageDocument!
  getMainPageList(before: String, after: String, first: Float, last: Float): MainPageConnection!
  getGlobalDocument(relativePath: String): GlobalDocument!
  getGlobalList(before: String, after: String, first: Float, last: Float): GlobalConnection!
}

type DocumentConnectionEdges {
  cursor: String
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float): DocumentConnection!
}

union DocumentNode = MainPageDocument | GlobalDocument

type MainPageBlocksLargeHero {
  headline: String
  hook: String
  popupVideoActive: Boolean
  popupVideoButtonLabel: String
  popupVideoButtonSource: String
  serviceBarActive: Boolean
  videoBackgroundActive: Boolean
  backgroundVideoSource: String
  backgroundImageSourceDesktop: String
  backgroundImageAltDesktop: String
  backgroundImageSourceMobile: String
  backgroundImageAltMobile: String
}

type MainPageBlocksHero {
  subHeadline: String
  headline: String
  hook: String
  backgroundImage: String
  backgroundImageMobile: String
  backgroundImageAlt: String
  ctaActive: Boolean
  ctaLabel: String
  ctaHref: String
}

type MainPageBlocksLongFeaturedImageFeaturedImage {
  image: String
  title: String
}

type MainPageBlocksLongFeaturedImageBlocksCenteredIconBlurb {
  icon: String
  iconAlt: String
  text: JSON
}

type MainPageBlocksLongFeaturedImageBlocksIconListBlurbIconList {
  title: String
  icon: String
}

type MainPageBlocksLongFeaturedImageBlocksIconListBlurb {
  iconList: [MainPageBlocksLongFeaturedImageBlocksIconListBlurbIconList]
  text: JSON
}

type MainPageBlocksLongFeaturedImageBlocksButton {
  label: String
  href: String
}

type MainPageBlocksLongFeaturedImageBlocksTitledIconBlurb {
  icon: String
  iconAlt: String
  Headline: String
  subHeadline: String
  blurb: JSON
}

union MainPageBlocksLongFeaturedImageBlocks = MainPageBlocksLongFeaturedImageBlocksCenteredIconBlurb | MainPageBlocksLongFeaturedImageBlocksIconListBlurb | MainPageBlocksLongFeaturedImageBlocksButton | MainPageBlocksLongFeaturedImageBlocksTitledIconBlurb

type MainPageBlocksLongFeaturedImage {
  standardSubHeadline: String
  standardHeadline: String
  twoColumnText: JSON
  featuredImage: [MainPageBlocksLongFeaturedImageFeaturedImage]
  featuredImageRightActive: Boolean
  blocks: [MainPageBlocksLongFeaturedImageBlocks]
  bottomPaddingActive: Boolean
}

type MainPageBlocksCtaButtons {
  mainCallToActionLabel: String
  mainCallToActionHref: String
  secondaryCallToActionLabel: String
  secondaryCallToActionVideoActive: Boolean
  secondaryCallToActionHrefOrSource: String
}

type MainPageBlocksShortIconGridFeaturedIconBlurb {
  title: String
  icon: String
  blurb: String
}

type MainPageBlocksShortIconGrid {
  headline: String
  featuredIconBlurb: [MainPageBlocksShortIconGridFeaturedIconBlurb]
}

type MainPageBlocksTestimonialSlider {
  standardSubHeadline: String
  standardHeadline: String
}

type MainPageBlocksPreFooterCta {
  standardSubHeadline: String
  standardHeadline: String
  hook: String
  mainCallToActionLabel: String
  mainCallToActionHref: String
}

union MainPageBlocks = MainPageBlocksLargeHero | MainPageBlocksHero | MainPageBlocksLongFeaturedImage | MainPageBlocksCtaButtons | MainPageBlocksShortIconGrid | MainPageBlocksTestimonialSlider | MainPageBlocksPreFooterCta

type MainPageSeo {
  title: String
  description: String
  image: String
  noFollow: Boolean
  noIndex: Boolean
}

type MainPage {
  blocks: [MainPageBlocks]
  seo: MainPageSeo
  mapEnabled: Boolean
}

type MainPageDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: MainPage!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type MainPageConnectionEdges {
  cursor: String
  node: MainPageDocument
}

type MainPageConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Float!
  edges: [MainPageConnectionEdges]
}

type GlobalHeaderLinks {
  title: String
  href: String
}

type GlobalHeader {
  preHeaderCtaLabel: String
  preHeaderCtaHref: String
  links: [GlobalHeaderLinks]
  ctaLabel: String
  ctaHref: String
}

type GlobalBusinessInfoContact {
  phone: String
  address: String
  email: String
}

type GlobalBusinessInfoHours {
  monday: String
  tuesday: String
  wednesday: String
  thursday: String
  friday: String
  saturday: String
  sunday: String
}

type GlobalBusinessInfoSocialLinks {
  facebook: String
  instagram: String
  youtube: String
  maps: String
  linkedin: String
}

type GlobalBusinessInfo {
  contact: GlobalBusinessInfoContact
  hours: GlobalBusinessInfoHours
  socialLinks: GlobalBusinessInfoSocialLinks
}

type GlobalServices {
  title: String
  serviceBarImage: String
}

union GlobalTestimonialsTestimonialsListActivePagesTitleDocument = MainPageDocument

type GlobalTestimonialsTestimonialsListActivePages {
  title: GlobalTestimonialsTestimonialsListActivePagesTitleDocument
}

type GlobalTestimonialsTestimonialsList {
  title: String
  shortDescription: String
  image: String
  imageAlt: String
  testimonialBody: String
  activePages: [GlobalTestimonialsTestimonialsListActivePages]
  videoActive: Boolean
  videoSource: String
}

type GlobalTestimonials {
  testimonialsList: [GlobalTestimonialsTestimonialsList]
}

type GlobalEventsEventList {
  title: String
  date: String
  description: JSON
}

type GlobalEvents {
  eventList: [GlobalEventsEventList]
}

type GlobalCampsCampList {
  title: String
  date: String
  description: JSON
  bookingHref: String
}

type GlobalCamps {
  campList: [GlobalCampsCampList]
}

type Global {
  header: GlobalHeader
  businessInfo: GlobalBusinessInfo
  services: [GlobalServices]
  testimonials: GlobalTestimonials
  events: GlobalEvents
  camps: GlobalCamps
}

type GlobalDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: Global!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type GlobalConnectionEdges {
  cursor: String
  node: GlobalDocument
}

type GlobalConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Float!
  edges: [GlobalConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updateMainPageDocument(relativePath: String!, params: MainPageMutation!): MainPageDocument!
  createMainPageDocument(relativePath: String!, params: MainPageMutation!): MainPageDocument!
  updateGlobalDocument(relativePath: String!, params: GlobalMutation!): GlobalDocument!
  createGlobalDocument(relativePath: String!, params: GlobalMutation!): GlobalDocument!
}

input DocumentMutation {
  mainPage: MainPageMutation
  global: GlobalMutation
}

input MainPageBlocksLargeHeroMutation {
  headline: String
  hook: String
  popupVideoActive: Boolean
  popupVideoButtonLabel: String
  popupVideoButtonSource: String
  serviceBarActive: Boolean
  videoBackgroundActive: Boolean
  backgroundVideoSource: String
  backgroundImageSourceDesktop: String
  backgroundImageAltDesktop: String
  backgroundImageSourceMobile: String
  backgroundImageAltMobile: String
}

input MainPageBlocksHeroMutation {
  subHeadline: String
  headline: String
  hook: String
  backgroundImage: String
  backgroundImageMobile: String
  backgroundImageAlt: String
  ctaActive: Boolean
  ctaLabel: String
  ctaHref: String
}

input MainPageBlocksLongFeaturedImageFeaturedImageMutation {
  image: String
  title: String
}

input MainPageBlocksLongFeaturedImageBlocksCenteredIconBlurbMutation {
  icon: String
  iconAlt: String
  text: JSON
}

input MainPageBlocksLongFeaturedImageBlocksIconListBlurbIconListMutation {
  title: String
  icon: String
}

input MainPageBlocksLongFeaturedImageBlocksIconListBlurbMutation {
  iconList: [MainPageBlocksLongFeaturedImageBlocksIconListBlurbIconListMutation]
  text: JSON
}

input MainPageBlocksLongFeaturedImageBlocksButtonMutation {
  label: String
  href: String
}

input MainPageBlocksLongFeaturedImageBlocksTitledIconBlurbMutation {
  icon: String
  iconAlt: String
  Headline: String
  subHeadline: String
  blurb: JSON
}

input MainPageBlocksLongFeaturedImageBlocksMutation {
  centeredIconBlurb: MainPageBlocksLongFeaturedImageBlocksCenteredIconBlurbMutation
  iconListBlurb: MainPageBlocksLongFeaturedImageBlocksIconListBlurbMutation
  button: MainPageBlocksLongFeaturedImageBlocksButtonMutation
  titledIconBlurb: MainPageBlocksLongFeaturedImageBlocksTitledIconBlurbMutation
}

input MainPageBlocksLongFeaturedImageMutation {
  standardSubHeadline: String
  standardHeadline: String
  twoColumnText: JSON
  featuredImage: [MainPageBlocksLongFeaturedImageFeaturedImageMutation]
  featuredImageRightActive: Boolean
  blocks: [MainPageBlocksLongFeaturedImageBlocksMutation]
  bottomPaddingActive: Boolean
}

input MainPageBlocksCtaButtonsMutation {
  mainCallToActionLabel: String
  mainCallToActionHref: String
  secondaryCallToActionLabel: String
  secondaryCallToActionVideoActive: Boolean
  secondaryCallToActionHrefOrSource: String
}

input MainPageBlocksShortIconGridFeaturedIconBlurbMutation {
  title: String
  icon: String
  blurb: String
}

input MainPageBlocksShortIconGridMutation {
  headline: String
  featuredIconBlurb: [MainPageBlocksShortIconGridFeaturedIconBlurbMutation]
}

input MainPageBlocksTestimonialSliderMutation {
  standardSubHeadline: String
  standardHeadline: String
}

input MainPageBlocksPreFooterCtaMutation {
  standardSubHeadline: String
  standardHeadline: String
  hook: String
  mainCallToActionLabel: String
  mainCallToActionHref: String
}

input MainPageBlocksMutation {
  largeHero: MainPageBlocksLargeHeroMutation
  hero: MainPageBlocksHeroMutation
  longFeaturedImage: MainPageBlocksLongFeaturedImageMutation
  ctaButtons: MainPageBlocksCtaButtonsMutation
  shortIconGrid: MainPageBlocksShortIconGridMutation
  testimonialSlider: MainPageBlocksTestimonialSliderMutation
  preFooterCta: MainPageBlocksPreFooterCtaMutation
}

input MainPageSeoMutation {
  title: String
  description: String
  image: String
  noFollow: Boolean
  noIndex: Boolean
}

input MainPageMutation {
  blocks: [MainPageBlocksMutation]
  seo: MainPageSeoMutation
  mapEnabled: Boolean
}

input GlobalHeaderLinksMutation {
  title: String
  href: String
}

input GlobalHeaderMutation {
  preHeaderCtaLabel: String
  preHeaderCtaHref: String
  links: [GlobalHeaderLinksMutation]
  ctaLabel: String
  ctaHref: String
}

input GlobalBusinessInfoContactMutation {
  phone: String
  address: String
  email: String
}

input GlobalBusinessInfoHoursMutation {
  monday: String
  tuesday: String
  wednesday: String
  thursday: String
  friday: String
  saturday: String
  sunday: String
}

input GlobalBusinessInfoSocialLinksMutation {
  facebook: String
  instagram: String
  youtube: String
  maps: String
  linkedin: String
}

input GlobalBusinessInfoMutation {
  contact: GlobalBusinessInfoContactMutation
  hours: GlobalBusinessInfoHoursMutation
  socialLinks: GlobalBusinessInfoSocialLinksMutation
}

input GlobalServicesMutation {
  title: String
  serviceBarImage: String
}

input GlobalTestimonialsTestimonialsListActivePagesMutation {
  title: String
}

input GlobalTestimonialsTestimonialsListMutation {
  title: String
  shortDescription: String
  image: String
  imageAlt: String
  testimonialBody: String
  activePages: [GlobalTestimonialsTestimonialsListActivePagesMutation]
  videoActive: Boolean
  videoSource: String
}

input GlobalTestimonialsMutation {
  testimonialsList: [GlobalTestimonialsTestimonialsListMutation]
}

input GlobalEventsEventListMutation {
  title: String
  date: String
  description: JSON
}

input GlobalEventsMutation {
  eventList: [GlobalEventsEventListMutation]
}

input GlobalCampsCampListMutation {
  title: String
  date: String
  description: JSON
  bookingHref: String
}

input GlobalCampsMutation {
  campList: [GlobalCampsCampListMutation]
}

input GlobalMutation {
  header: GlobalHeaderMutation
  businessInfo: GlobalBusinessInfoMutation
  services: [GlobalServicesMutation]
  testimonials: GlobalTestimonialsMutation
  events: GlobalEventsMutation
  camps: GlobalCampsMutation
}

schema {
  query: Query
  mutation: Mutation
}
  